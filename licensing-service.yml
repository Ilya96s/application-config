example:
  property: "I AM THE DEFAULT"

# DataSource settings: set here your own configurations for the database
spring:
  jpa:
    hibernate:
      ddl-auto: none
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      dialect: org.hibernate.dialect.PostgreSQLDialect
    database: POSTGRESQL
    datasource:
      platform: postgres
      testWhileIdle: true
      validationQuery: SELECT 1
      driverClassName: org.postgresql.Driver
    show-sql: true
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: test-topic123
      properties:
        spring:
          json:
            trusted:
              packages: '*'
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/Spmia-realm

server:
  port: 8082

#Регистрация службы в Spring Eureka
eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

#Настройка шаблона размыкатель цепи
resilience4j:
  circuitbreaker:
    instances:
      licenseService:
        registerHealthIndicator: true
        ringBufferSizeInClosedState: 5
        ringBufferSizeInHalfOpenState: 3
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
#Настройка шаблона герметичных отсеков
  bulkhead:
    instances:
      bulkheadLicenseService:
        maxWaitDuration: 10ms
        maxConcurrentCalls: 20
  thread-pool-bulkhead:
    instances:
      bulkheadLicenseService:
        maxThreadPoolSize: 1
        coreThreadPoolSize: 1
        queueCapacity: 1
        keepAliveDuration: 20ms

#Настройка шаблона повторных попыток
  retry:
    instances:
      retryLicenseService:
        maxRetryAttempts: 5
        waitDuration: 10000
        retryExceptions:
          - java.util.concurrent.TimeoutException

#Настройка шаблона ограничитель частоты
  ratelimiter:
    instances:
      licenseService:
        timeoutDuration: 1000ms
        limitRefreshPeriod: 5000
        limitForPeriod: 5

management:
  endpoints:
    web:
      exposure:
        include: "*"

keycloak:
  realm: spmia-realm
  auth-server-url: http://keycloak:8080/auth
  ssl-required: external
  resource: ostock
  credentials:
    secret: ecSnFJiIQ2HImBQpYLmIXazuPNOT5kxs
  use-resource-role-mappings: true
  bearer-only: true