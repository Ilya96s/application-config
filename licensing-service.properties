example.property= I AM THE DEFAULT

spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName= org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.jpa.hibernate.ddl-auto=create

server.port= 8082

#Регистрация службы в Spring Eureka
eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/

#Настройка шаблона размыкатель цепи
 #Следует ли экспортировать конфигурацию через endpoint health
resilience4j.circuitbreaker.instances.licenseService.registerHealthIndicator=true
 #Размер кольцевого буфера для замкнутого состояния
resilience4j.circuitbreaker.instances.licenseService.ringBufferSizeInClosedState=5
 #Размер кольцевого буфера для полуоткрытого состояния
resilience4j.circuitbreaker.instances.licenseService.ringBufferSizeInHalfOpenState=3
 #Продолжительность ожидания в размокнутом состоянии
resilience4j.circuitbreaker.instances.licenseService.waitDurationInOpenState=10s
 #Порог частоты отказов в процентах
resilience4j.circuitbreaker.instances.licenseService.failureRateThreshold=50
 #Исключения, которые должны расцениваться как сбои
resilience4j.circuitbreaker.instances.licenseService.recordExceptions[0]=org.springframework.web.client.HttpServerErrorException
resilience4j.circuitbreaker.instances.licenseService.recordExceptions[1]=java.io.IOException
resilience4j.circuitbreaker.instances.licenseService.recordExceptions[2]=java.util.concurrent.TimeoutException
resilience4j.circuitbreaker.instances.licenseService.recordExceptions[3]=org.springframework.web.client.ResourceAccessException

#Настройка шаблона герметичных отсеков
 # Bulkhead configuration
  #Максимальна продолжительность блокировки потока герметичном отсеке
resilience4j.bulkhead.instances.bulkheadLicenseService.maxWaitDuration=10ms
  #Максимальное кол-во одновременных вызовов, разрешенное в герметичном отсеке
resilience4j.bulkhead.instances.bulkheadLicenseService.maxConcurrentCalls=20
 # Thread pool bulkhead configuration
  #Максимальное кол-во потоков в пуле
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.maxThreadPoolSize=1
  #Размер основного пула потоков
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.coreThreadPoolSize=1
  #Вместимость очереди
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.queueCapacity=1
  #Максимальное время, в течении которого простаивающие потоки ждут новых заданий перед завершением
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.keepAliveDuration=20ms

